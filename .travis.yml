language: python

# whitelist branches on which tests will be run
branches:
  only:
    - master
    - tlslite-ng-0.5
    - tlslite-ng-0.6
    - tlslite-ng-0.7

addons:
  apt_packages:
    # needed for M2Crypto
    - swig
    # needed for GMPY
    - libgmp-dev

python:
  - 2.6
  - 2.7
  - 3.2
  - 3.3
  - 3.4
  - 3.5
  - 3.6
  - 3.7-dev

env:
  - TACKPY=true
  - TACKPY=false

matrix:
  exclude:
    - env: TACKPY=true
  include:
    - python: 2.7
      env: TACKPY=true
    - python: 3.4
      env: TACKPY=true
    - python: 2.7
      env: M2CRYPTO=true
    - python: 3.4
      env: M2CRYPTO=true
    - python: 3.5
      env: M2CRYPTO=true
    - python: 3.6
      env: M2CRYPTO=true
    - python: 2.7
      env: PYCRYPTO=true
    - python: 3.4
      env: PYCRYPTO=true
    - python: 3.5
      env: PYCRYPTO=true
    - python: 3.6
      env: PYCRYPTO=true
    - python: 3.7-dev
      env: PYCRYPTO=true
    - python: 2.7
      env: GMPY=true
    - python: 3.4
      env: GMPY=true
    - python: 3.5
      env: GMPY=true
    - python: 3.6
      env: GMPY=true
    - python: 2.7
      env: M2CRYPTO=true PYCRYPTO=true GMPY=true
    - python: 3.4
      env: M2CRYPTO=true PYCRYPTO=true GMPY=true
    - python: 3.5
      env: M2CRYPTO=true PYCRYPTO=true GMPY=true
    - python: 3.6
      env: M2CRYPTO=true PYCRYPTO=true GMPY=true
    - python: 3.7-dev
      env: M2CRYPTO=true PYCRYPTO=true GMPY=true

before_install:
  - |
       echo -e "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST\n" \
               "TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG\n" \
               "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST\n" \
               "TRAVIS_COMMIT=$TRAVIS_COMMIT\n" \
               "TRAVIS_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION"
  - |
       # workaround https://github.com/travis-ci/travis-ci/issues/2666
       if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
         URL="https://github.com/${TRAVIS_REPO_SLUG}/pull/${TRAVIS_PULL_REQUEST}.patch"
         # `--location` makes curl follow redirects
         PR_FIRST=$(curl --silent --show-error --location $URL | head -1 | grep -o -E '\b[0-9a-f]{40}\b' | tr -d '\n')
         TRAVIS_COMMIT_RANGE=$PR_FIRST^..$TRAVIS_COMMIT
       fi
  # sanity check current commit
  - git rev-parse HEAD
  - echo "TRAVIS_COMMIT_RANGE=$TRAVIS_COMMIT_RANGE"
  - git fetch origin master:refs/remotes/origin/master

install:
  - if [[ $TRAVIS_PYTHON_VERSION == '2.6' ]]; then travis_retry pip install unittest2 'isort<4.3'; fi
  - if [[ $TRAVIS_PYTHON_VERSION == '2.7' ]]; then travis_retry pip install unittest2; fi
  - if [[ $TACKPY == 'true' ]]; then travis_retry pip install tackpy; fi
  - if [[ $M2CRYPTO == 'true' ]]; then travis_retry pip install --pre m2crypto; fi
  - if [[ $PYCRYPTO == 'true' ]]; then travis_retry pip install pycrypto; fi
  - if [[ $GMPY == 'true' ]]; then travis_retry pip install gmpy; fi
  - if [[ $TRAVIS_PYTHON_VERSION == '3.2' ]]; then travis_retry pip install 'coverage<4' 'hypothesis<1.10'; elif [[ $TRAVIS_PYTHON_VERSION == '3.3' ]]; then travis_retry pip install 'coverage' 'hypothesis<3.44' ; elif [[ $TRAVIS_PYTHON_VERSION == '2.6' ]]; then travis_retry pip install coverage 'hypothesis<3'; else travis_retry pip install coverage hypothesis; fi
  - travis_retry pip install -r requirements.txt
  - travis_retry pip install -r build-requirements.txt

script:
  - |
      if [[ $TRAVIS_PYTHON_VERSION == '2.6' ]]; then
          coverage run --branch --source tlslite -m unittest2 discover;
      else
          coverage run --branch --source tlslite -m unittest discover;
      fi
  - coverage report -m
  - ./setup.py install && make test
  # pylint doesn't work on 2.6: https://bitbucket.org/logilab/pylint/issue/390/py26-compatiblity-broken
  # diff-quality doesn't work on 3.2: https://github.com/edx/diff-cover/issues/94
  - |
      if [[ $TRAVIS_PYTHON_VERSION != '2.6' ]] && [[ $TRAVIS_PYTHON_VERSION != '3.2' ]]; then
        pylint --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" tlslite > pylint_report.txt || :
        diff-quality --violations=pylint --fail-under=90 pylint_report.txt
      fi
  - |
      if [[ $TRAVIS_PULL_REQUEST != "false" ]]; then
        echo "Will test commits between $TRAVIS_COMMIT_RANGE:"
        git log --oneline --reverse $TRAVIS_COMMIT_RANGE

        for i in $(git log --pretty=format:%H --reverse $TRAVIS_COMMIT_RANGE); do
          git checkout $i
          make clean
          if [[ $TRAVIS_PYTHON_VERSION == '2.6' ]]; then
            unit2 discover || exit 1
          else
            python -m unittest discover || exit 1
          fi
          make test-local || exit 1
          cd $TRAVIS_BUILD_DIR
        done
      fi

sudo: false

after_success:
 - coveralls
